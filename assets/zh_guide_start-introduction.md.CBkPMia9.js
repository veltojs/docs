import{_ as i,c as a,o as t,ae as l}from"./chunks/framework.tuuL-SzM.js";const c=JSON.parse('{"title":"📘 Velto 简介","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/start-introduction.md","filePath":"zh/guide/start-introduction.md"}'),e={name:"zh/guide/start-introduction.md"};function n(h,s,p,k,o,r){return t(),a("div",null,s[0]||(s[0]=[l(`<h1 id="📘-velto-简介" tabindex="-1">📘 Velto 简介 <a class="header-anchor" href="#📘-velto-简介" aria-label="Permalink to &quot;📘 Velto 简介&quot;">​</a></h1><p><strong>Velto</strong> 是一个没有虚拟 DOM 的 Web 框架，旨在构建无需虚拟 DOM 的响应式用户界面。</p><h2 id="项目特点" tabindex="-1">项目特点 <a class="header-anchor" href="#项目特点" aria-label="Permalink to &quot;项目特点&quot;">​</a></h2><ul><li><p><strong>无虚拟 DOM</strong>：Velto 采用直接操作真实 DOM 的方式，避免了虚拟 DOM 的中间层，提高了性能和响应速度。</p></li><li><p><strong>响应式系统</strong>：内置轻量级响应式系统，包括 <code>ref</code>、<code>computed</code> 和 <code>watch</code> 等功能，允许开发者以声明式的方式处理状态变化。</p></li><li><p><strong>模块化设计</strong>：项目结构清晰，代码模块化，便于维护和扩展。</p></li></ul><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><p>Velto 仓库主要包含以下目录和文件：</p><ul><li><p><code>packages/</code>：核心功能模块，包括响应式系统的实现。</p></li><li><p><code>examples/</code>：示例代码，展示如何使用 Velto 构建应用。</p></li><li><p><code>scripts/</code>：构建和开发脚本。</p></li><li><p>配置文件：包括 <code>tsconfig.json</code>、<code>package.json</code> 等，用于项目配置和依赖管理。</p></li></ul><h2 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">​</a></h2><ol><li><code>ref</code></li></ol><p>用于创建响应式数据对象。通过 <code>.value</code> 访问和修改其值，系统会自动追踪依赖并在值变化时触发更新。</p><ol start="2"><li><code>computed</code></li></ol><p>用于创建基于其他响应式数据的派生值。支持只读和可写两种模式，具有缓存特性，只有在依赖变化时才重新计算。</p><ol start="3"><li><code>watch</code></li></ol><p>用于监听响应式数据的变化，并在变化时执行回调函数。支持配置选项，如 <code>immediate</code> 和 <code>once</code>，控制回调的触发时机和次数。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p>以下是使用 Velto 构建简单计数器的示例：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref, computed, watch } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;velto&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> computed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">watch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(count, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newVal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">oldVal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Count changed from \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oldVal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} to \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">newVal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(double.value); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: 2</span></span></code></pre></div><h2 id="相关资源" tabindex="-1">相关资源 <a class="header-anchor" href="#相关资源" aria-label="Permalink to &quot;相关资源&quot;">​</a></h2><ul><li><p>GitHub 仓库：<a href="https://github.com/zebing/velto" target="_blank" rel="noreferrer">https://github.com/zebing/velto</a></p></li><li><p>许可证：MIT</p></li></ul>`,19)]))}const E=i(e,[["render",n]]);export{c as __pageData,E as default};
